name: Dependabot Auto Merge

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write
  
jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Check if PR is from Dependabot
        id: check
        run: |
          if [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
            echo "is_dependabot=true" >> $GITHUB_OUTPUT
          else
            echo "is_dependabot=false" >> $GITHUB_OUTPUT
          fi

      - name: Fetch PR details
        if: steps.check.outputs.is_dependabot == 'true'
        id: pr-details
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const title = pr.title.toLowerCase();
            const isMinor = title.includes('minor') || title.includes('patch');
            const isSecurity = title.includes('security');
            
            core.setOutput('is_minor', isMinor);
            core.setOutput('is_security', isSecurity);
            core.setOutput('title', pr.title);

      - name: Enable auto-merge for minor updates and security patches
        if: steps.check.outputs.is_dependabot == 'true' && (steps.pr-details.outputs.is_minor == 'true' || steps.pr-details.outputs.is_security == 'true')
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'APPROVE',
              body: 'ðŸ¤– Auto-approving Dependabot PR for minor/patch update or security fix'
            });
            
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              merge_method: 'squash'
            });