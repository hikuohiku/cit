name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  detect-language:
    runs-on: ubuntu-latest
    outputs:
      has-node: ${{ steps.check.outputs.has-node }}
      has-python: ${{ steps.check.outputs.has-python }}
      has-rust: ${{ steps.check.outputs.has-rust }}
      has-go: ${{ steps.check.outputs.has-go }}
    steps:
      - uses: actions/checkout@v5
      - name: Check project type
        id: check
        run: |
          echo "has-node=$(test -f package.json && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "has-python=$(test -f requirements.txt -o -f pyproject.toml -o -f setup.py && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "has-rust=$(test -f Cargo.toml && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "has-go=$(test -f go.mod && echo true || echo false)" >> $GITHUB_OUTPUT

  node-quality:
    needs: detect-language
    if: needs.detect-language.outputs.has-node == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: |
          if npm run lint --if-present; then
            echo "✅ ESLint passed"
          else
            echo "❌ ESLint failed"
            exit 1
          fi
      
      - name: Run Prettier
        run: |
          if npm run format:check --if-present; then
            echo "✅ Prettier check passed"
          else
            echo "❌ Prettier check failed"
            exit 1
          fi
      
      - name: Run TypeScript check
        run: |
          if npm run type-check --if-present; then
            echo "✅ TypeScript check passed"
          else
            echo "❌ TypeScript check failed"
            exit 1
          fi
      
      - name: Run tests
        run: |
          if npm test --if-present; then
            echo "✅ Tests passed"
          else
            echo "❌ Tests failed"
            exit 1
          fi

  python-quality:
    needs: detect-language
    if: needs.detect-language.outputs.has-python == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          pip install flake8 black isort pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install .; fi
      
      - name: Run Black (formatter)
        run: black --check .
      
      - name: Run isort (import sorter)
        run: isort --check-only .
      
      - name: Run flake8 (linter)
        run: flake8 .
      
      - name: Run tests
        run: pytest --if-present || echo "No tests found"

  rust-quality:
    needs: detect-language
    if: needs.detect-language.outputs.has-rust == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Run rustfmt
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy -- -D warnings
      
      - name: Run tests
        run: cargo test

  go-quality:
    needs: detect-language
    if: needs.detect-language.outputs.has-go == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.x'
      
      - name: Run gofmt
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted. Run 'gofmt -s -w .'"
            gofmt -s -l .
            exit 1
          fi
      
      - name: Run go vet
        run: go vet ./...
      
      - name: Run tests
        run: go test ./...